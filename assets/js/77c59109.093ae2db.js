"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[7071],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>m});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),u=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},p=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=u(r),m=o,y=d["".concat(s,".").concat(m)]||d[m]||c[m]||a;return r?n.createElement(y,l(l({ref:t},p),{},{components:r})):n.createElement(y,l({ref:t},p))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,l=new Array(a);l[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var u=2;u<a;u++)l[u]=r[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},4470:(e,t,r)=>{r.r(t),r.d(t,{frontMatter:()=>a,contentTitle:()=>l,metadata:()=>i,toc:()=>s,default:()=>p});var n=r(7462),o=(r(7294),r(3905));const a={id:"seed-generator",title:"Seed Generator",sidebar_label:"Seed Generator"},l="Generating a *Seed*",i={unversionedId:"seed-generator",id:"seed-generator",isDocsHomePage:!1,title:"Seed Generator",description:"One of the advantages of using XEST framework is that you can generate your seed data from your command line with;",source:"@site/docs/seed-generator.md",sourceDirName:".",slug:"/seed-generator",permalink:"/docs/seed-generator",editUrl:"https://github.com/CyprusCodes/xest/tree/main/documentation/docs/docs/seed-generator.md",tags:[],version:"current",frontMatter:{id:"seed-generator",title:"Seed Generator",sidebar_label:"Seed Generator"},sidebar:"docs",previous:{title:"Query Generator",permalink:"/docs/query-generator"},next:{title:"Endpoint Generator",permalink:"/docs/endpoint-generator"}},s=[],u={toc:s};function p(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"generating-a-seed"},"Generating a ",(0,o.kt)("em",{parentName:"h1"},"Seed")),(0,o.kt)("p",null,"One of the advantages of using ",(0,o.kt)("strong",{parentName:"p"},"XEST")," framework is that you can generate your seed data from your command line with;"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"$ xx new\n")),(0,o.kt)("p",null,"This will ask the user several questions like a survey user is able to answer 1 question every time to form their query."),(0,o.kt)("hr",null),(0,o.kt)("p",null,"\u2753 What would you like to generate? (Use arrow keys)"),(0,o.kt)("p",null,"\u25b6\ufe0f query"),(0,o.kt)("p",null,"\u25b6\ufe0f migrations"),(0,o.kt)("p",null,"\u25b6\ufe0f seed"),(0,o.kt)("p",null,"You can choose which one you would like to generate with arrows, in this case ",(0,o.kt)("inlineCode",{parentName:"p"},"seed"),", which will ask the following question;"),(0,o.kt)("hr",null),(0,o.kt)("p",null,"\u2753 Select a table"),(0,o.kt)("p",null,"\u25b6\ufe0f migrations"),(0,o.kt)("p",null,"\u25b6\ufe0f users"),(0,o.kt)("p",null,"\u25b6\ufe0f user_types"),(0,o.kt)("p",null,"Choosing the table lets your seed-data to be entered in the selected table."),(0,o.kt)("p",null,"In the ",(0,o.kt)("strong",{parentName:"p"},"XEST")," framework there is an option to link two tables, which you can do from your command line after choosing your first table ",(0,o.kt)("strong",{parentName:"p"},"XEST")," framework asks you;"),(0,o.kt)("hr",null),(0,o.kt)("p",null,"\u2753 Would you like to seed another table? (Y/N)"),(0,o.kt)("p",null,"If you want to seed another table you can type ",(0,o.kt)("strong",{parentName:"p"},"Y")," and press enter, if not type ",(0,o.kt)("strong",{parentName:"p"},"N")," and press enter."),(0,o.kt)("p",null,"If ",(0,o.kt)("strong",{parentName:"p"},"Y"),", it asks you which table you would like to select, apart from the one selected before."),(0,o.kt)("hr",null),(0,o.kt)("p",null,"Then asking"),(0,o.kt)("p",null,"\u2753 How many seed records do you want to create?(1)"),(0,o.kt)("p",null,"This will generate optional seed generators for each column. It will migrate a dummy seed data within your database, which you can test from your MYSQL Workbench or BeeKeeper Studio."),(0,o.kt)("p",null,"Once happy copy and paste it to the ",(0,o.kt)("inlineCode",{parentName:"p"},"database/seed-data.sql")," file."))}p.isMDXComponent=!0}}]);