"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[5262],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=c(n),m=a,g=d["".concat(p,".").concat(m)]||d[m]||u[m]||o;return n?r.createElement(g,i(i({ref:t},s),{},{components:n})):r.createElement(g,i({ref:t},s))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3919:(e,t,n)=>{function r(e){return!0===/^(\w*:|\/\/)/.test(e)}function a(e){return void 0!==e&&!r(e)}n.d(t,{b:()=>r,Z:()=>a})},4996:(e,t,n)=>{n.d(t,{C:()=>o,Z:()=>i});var r=n(2263),a=n(3919);function o(){const{siteConfig:{baseUrl:e="/",url:t}={}}=(0,r.Z)();return{withBaseUrl:(n,r)=>function(e,t,n,r){let{forcePrependBaseUrl:o=!1,absolute:i=!1}=void 0===r?{}:r;if(!n)return n;if(n.startsWith("#"))return n;if((0,a.b)(n))return n;if(o)return t+n;const l=n.startsWith(t)?n:t+n.replace(/^\//,"");return i?e+l:l}(t,e,n,r)}}function i(e,t){void 0===t&&(t={});const{withBaseUrl:n}=o();return n(e,t)}},5852:(e,t,n)=>{n.r(t),n.d(t,{frontMatter:()=>o,contentTitle:()=>i,metadata:()=>l,toc:()=>p,default:()=>s});var r=n(7462),a=(n(7294),n(3905));const o={id:"digital-ocean",title:"Deploy Xest API Project to Digital Ocean",sidebar_label:"Digital Ocean"},i=void 0,l={unversionedId:"digital-ocean",id:"digital-ocean",isDocsHomePage:!1,title:"Deploy Xest API Project to Digital Ocean",description:"Step 1 digital ocean.",source:"@site/docs/digital-ocean.md",sourceDirName:".",slug:"/digital-ocean",permalink:"/docs/digital-ocean",editUrl:"https://github.com/CyprusCodes/xest/tree/main/documentation/docs/docs/digital-ocean.md",tags:[],version:"current",frontMatter:{id:"digital-ocean",title:"Deploy Xest API Project to Digital Ocean",sidebar_label:"Digital Ocean"},sidebar:"docs",previous:{title:"Securing API Endpoints",permalink:"/docs/securing-api-endpoints"},next:{title:"AWS Deployment",permalink:"/docs/aws-deployment"}},p=[],c={toc:p};function s(e){let{components:t,...o}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Step 1:")," Create a Digital Ocean account, here: ",(0,a.kt)("a",{parentName:"p",href:"https://cloud.digitalocean.com/registrations/new"},"digital ocean"),"."),(0,a.kt)("p",null,"To deploy a Xest Project to Digital Ocean, Run: "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"xx deploy\n")),(0,a.kt)("p",null,"Xest CLI will give you options. Choose Digital Ocean"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Starting deployment...\n? Select the deployment platform (Use arrow keys)\n\u276f Digital Ocean\n  AWS\n")),(0,a.kt)("p",null,"This will automatically create a deployment folder named  ",(0,a.kt)("strong",{parentName:"p"},".do")," folder with 2 files"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"app.yaml")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"name: project_name\nservices:\n- environment_slug: node-js\n  github:\n    branch: your_deployment_branch\n    deploy_on_push: true\n    repo: github_profile/project\n  name: project_name\n")),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},"deploy.template.yaml")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"spec:\n  name: project_name\n  services:\n  - environment_slug: node-js\n    git:\n      branch: your_deployment_branch\n      repo_clone_url: https://github.com/github_profile/project.git\n    name: project_name\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"The file will automatically autocomplete the necessary information for deployment, including your repository and app name.")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Step 2:")," Create a Digital Ocean account, here: ",(0,a.kt)("a",{parentName:"p",href:"https://cloud.digitalocean.com/login"},"digital ocean"),"."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Step 3:")," Once your account is created, create a new project (or use the one created for you as default)."),(0,a.kt)("img",{style:{margin:"20px 20px"},alt:"Xest Logo",width:"70%",src:n(4996).Z("img/create_new_project.webp")}),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Step 4:")," Create a new Database, on the Database Space, Choose MySQL as Database type, give your database cluster a name, and select your project."),(0,a.kt)("img",{style:{margin:"20px 20px"},alt:"Xest Logo",width:"70%",src:n(4996).Z("img/creating_a_database_cluster.webp")}),(0,a.kt)("img",{style:{margin:"20px 20px"},alt:"Xest Logo",width:"70%",src:n(4996).Z("img/creating_a_database_cluster_2.webp")}),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Step 5:")," Finish your database configuration and copy your connection details, it should look like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"username = doadmin\npassword = *****************************\nhost = xxxxxxxxxxx.ondigitalocean.com\nport = your_port\ndatabase = database_name\nsslmode = REQUIRED\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Step 6:")," Go to App Platform and Create a new App, I will advise you to push your project on GitHub, it will be easy for the deployment.\nChoose your repository and the main branch you want to use."),(0,a.kt)("img",{style:{margin:"20px 20px"},alt:"Xest Logo",width:"70%",src:n(4996).Z("img/app_reation_in_DO.webp")}),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Step 7:")," In your Environment Variables add your connection details like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"DB_NAME=database_name\n\nDB_USER=doadmin\n\nDB_PASSWORD=**************\n\nsslmode=REQUIRED\n\nDB_HOST=xxxxxxxxxx.ondigitalocean.com\n\nDB_PORT=your_port\n\nAPP_ENVIRONMENT=PRODUCTION\n\nJWT_SECRET=SUPER_DUPER_SECRET\n\nPASSWORD_SALT=SECRET_SALT\n")),(0,a.kt)("p",null,"Once finished, you will have something like this:"),(0,a.kt)("img",{style:{margin:"20px 20px"},alt:"Xest Logo",width:"70%",src:n(4996).Z("img/showing_that_the_app_has_been_created.webp")}),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Step 8:")," Create your droplet, and remember to choose your project on the project input."),(0,a.kt)("img",{style:{margin:"20px 20px"},alt:"Xest Logo",width:"70%",src:n(4996).Z("img/screen_for_creating_a_droplet_on_d_o.webp")}),(0,a.kt)("p",null,"With This Your Digital Ocean is ready to deploy your Xest API project."))}s.isMDXComponent=!0}}]);