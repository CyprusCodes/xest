"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[7103],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),m=o,h=u["".concat(s,".").concat(m)]||u[m]||d[m]||a;return n?r.createElement(h,i(i({ref:t},c),{},{components:n})):r.createElement(h,i({ref:t},c))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var p=2;p<a;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},7252:(e,t,n)=>{n.r(t),n.d(t,{frontMatter:()=>a,contentTitle:()=>i,metadata:()=>l,toc:()=>s,default:()=>c});var r=n(7462),o=(n(7294),n(3905));const a={id:"endpoint-generator",title:"Endpoint Generator",sidebar_label:"Endpoint Generator"},i="Generating an _Endpoint_",l={unversionedId:"endpoint-generator",id:"endpoint-generator",isDocsHomePage:!1,title:"Endpoint Generator",description:"Tutorial Video",source:"@site/docs/endpoint-generator.mdx",sourceDirName:".",slug:"/endpoint-generator",permalink:"/docs/endpoint-generator",editUrl:"https://github.com/CyprusCodes/xest/tree/main/documentation/docs/docs/endpoint-generator.mdx",tags:[],version:"current",frontMatter:{id:"endpoint-generator",title:"Endpoint Generator",sidebar_label:"Endpoint Generator"},sidebar:"docs",previous:{title:"Seed Generator",permalink:"/docs/seed-generator"},next:{title:"Xest Diagram",permalink:"/docs/xest-diagram"}},s=[{value:"Tutorial Video",id:"tutorial-video",children:[],level:3},{value:"Steps",id:"steps",children:[],level:3}],p={toc:s};function c(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"generating-an-endpoint"},"Generating an ",(0,o.kt)("em",{parentName:"h1"},"Endpoint")),(0,o.kt)("h3",{id:"tutorial-video"},"Tutorial Video"),(0,o.kt)("p",null,"Below is a video showing you to use the ",(0,o.kt)("inlineCode",{parentName:"p"},"xx new")," command to create an endpoint and more"),(0,o.kt)("div",null,(0,o.kt)("iframe",{style:{width:"70%",height:"400px"},src:"https://www.youtube.com/embed/KSjx4ktEb54?si=5K5ADz8gvZ2iaoG_",frameBorder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowFullScreen:!0,title:"Embedded youtube"})),(0,o.kt)("h3",{id:"steps"},"Steps"),(0,o.kt)("p",null,"One of the advantages of using ",(0,o.kt)("strong",{parentName:"p"},"XEST")," framework is that you can generate your endpoints from your command line with the following command"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"$ xx new\n")),(0,o.kt)("p",null,"Xest CLI will take you through a survey to generate your endpoint."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"What would you like to generate? (Use keyboard arrow keys)\n\n// highlight-next-line\n\u25b6\ufe0f endpoint\n\u25b6\ufe0f query\n\u25b6\ufe0f migrations\n\u25b6\ufe0f seed\n")),(0,o.kt)("p",null,"You can choose which one you would like to generate with the arrow keys, in this case we will be choosing\n",(0,o.kt)("strong",{parentName:"p"},"GET")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"What type of endpoint will this be?\n\n// highlight-next-line\n\u25b6\ufe0fGET\n\u25b6\ufe0fPOST\n\u25b6\ufe0fPUT\n\u25b6\ufe0fDELETE\n\u25b6\ufe0fAll of the above\n")),(0,o.kt)("p",null,"After choosing the type of operation you need to choose the table that this endpoint will be based on."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"What will be the main entity for this endpoint?\n\n// highlight-next-line\n\u25b6\ufe0f users\n\u25b6\ufe0f user_types\n")),(0,o.kt)("p",null,"After choosing the table you will need to choose if the endpoint should be paginated or not."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"Should GET endpoint be paginated?\n\n\u25b6\ufe0f Yes\n// highlight-next-line\n\u25b6\ufe0f No\n")),(0,o.kt)("p",null,"Now You will have to select at least one column from your table to filter by, in this case, let's select user_id."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"Select columns to filter (Must be atleast one filter for GET, PUT, DELETE)\n(Press <space> to select, <a> to toggle all, <i> to invert selection, and <enter> to proceed)\n\n// highlight-next-line\n\u25c9 user_id\n\u25ef first_name\n\u25ef last_name\n\u25ef email\n\u25ef password\n\u25ef user_type_id\n\u25ef created_at\n")),(0,o.kt)("p",null,"Now let's select the columns that will be included in the response from this endpoint."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"Select columns for response\n(Press <space> to select, <a> to toggle all, <i> to invert selection, and <enter> to proceed)\n\n// highlight-start\n\u25c9 user_id\n\u25c9 first_name\n\u25c9 last_name\n\u25c9 email\n\u25c9 created_at\n// highlight-end\n\u25ef password\n\u25ef user_type_id\n")),(0,o.kt)("p",null,"In your ",(0,o.kt)("inlineCode",{parentName:"p"},"routes.js")," file a new route will be created, you can proceed to modify the created controller or add a middleware."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'// routes.js\n\n// highlight-next-line\nrouter.get("/users", /*- TODO: auth middleware -*/ getUsers);\n')),(0,o.kt)("p",null,"\u2705 ",(0,o.kt)("strong",{parentName:"p"},"And DONE! Your endpoint has been successfully created.")," A new route, controller and action will be created."))}c.isMDXComponent=!0}}]);